plugins {
  id 'java'
  id 'io.quarkus'
  id 'com.adarshr.test-logger' version '3.2.0'
  id 'eclipse'
}

apply from: 'buildscripts/code-analysis.gradle'

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url "https://packages.confluent.io/maven/"
  }
}

sourceSets {
  integrationTest {
    java.srcDir file('src/integrationTest/java')
    compileClasspath += sourceSets.main.output
    runtimeClasspath += sourceSets.main.output
  }
}

eclipse {
  classpath {
    plusConfigurations.add configurations.integrationTestRuntimeOnly
    plusConfigurations.add configurations.integrationTestImplementation
  }
}

task integrationTest(type: Test) {
  description = 'Runs integration tests.'
  group = 'verification'

  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  shouldRunAfter test
}

check.dependsOn integrationTest

configurations {
  integrationTestImplementation.extendsFrom implementation
  integrationTestRuntimeOnly.extendsFrom runtimeOnly

  integrationTestImplementation.setCanBeResolved(true)
  integrationTestRuntimeOnly.setCanBeResolved(true)
}

sourceSets.main.java.srcDirs = ['build/classes/java/quarkus-generated-sources/avdl', 'src/main/java']

dependencies {
  implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")

  implementation 'io.quarkus:quarkus-container-image-jib'
  implementation 'io.quarkus:quarkus-micrometer-registry-prometheus'

  // Base
  implementation 'io.quarkus:quarkus-resteasy-jackson'
  implementation 'io.quarkus:quarkus-resteasy'
  implementation group: 'io.quarkus', name: 'quarkus-smallrye-reactive-messaging'
  implementation group: 'io.smallrye.reactive', name: 'smallrye-reactive-messaging-in-memory'
  
  // Utility
  implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

  // Auth
  implementation 'io.quarkus:quarkus-oidc'
  implementation 'io.quarkus:quarkus-mongodb-panache'
  
  // Kafka
  implementation 'io.quarkus:quarkus-confluent-registry-avro'
  implementation group: 'io.confluent', name: 'kafka-avro-serializer', version: '7.2.1'
  implementation 'io.quarkus:quarkus-avro'
  implementation group: 'io.quarkus', name: 'quarkus-smallrye-reactive-messaging-kafka'
  
  testImplementation 'io.quarkus:quarkus-junit5'
  testImplementation 'io.rest-assured:rest-assured'
  testImplementation "org.mockito:mockito-core:2.+"

  // Integration Testing
  integrationTestImplementation 'io.quarkus:quarkus-junit5'  
  integrationTestImplementation 'org.mockito:mockito-junit-jupiter'
  integrationTestImplementation "org.testcontainers:testcontainers:1.17.5"
  integrationTestImplementation "org.testcontainers:kafka:1.17.5"
}

group 'net.explorviz'
version '1.0.0-SNAPSHOT'

compileJava {
  options.encoding = 'UTF-8'
  options.compilerArgs << '-parameters'
}

compileTestJava {
  options.encoding = 'UTF-8'
}

java {
  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11
}

test {
  systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}

integrationTest {
  systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
