image: openjdk:11-jdk

# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  policy: pull
  paths:
    - .gradle

stages:
  - build
  - code-analysis
  - test
  - integrationTest
  - coverage
  - visualize
  - deploy

build:
  stage: build
  tags:
    - exec-docker
  script: ./gradlew --build-cache assemble
  cache:
    policy: push
    paths:
      - .gradle
  artifacts:
    paths:
      - build

pmd:
  stage: code-analysis
  tags:
    - exec-docker
  script: ./gradlew pmdMain
  artifacts:
    paths:
      - build

checkstyle:
  stage: code-analysis
  tags:
    - exec-docker
  script: ./gradlew checkstyleMain
  artifacts:
    paths:
      - build

test:
  stage: test
  tags:
    - exec-docker
  script:
    - ./gradlew test
  dependencies:
    - builld
  artifacts:
    paths:
      - build

integration-test:
  stage: integrationTest
  tags:
    - podman
  script: 
    - DOCKER_HOST="unix:///run/user/$UID/podman/podman.sock" TESTCONTAINERS_RYUK_DISABLED=true TESTCONTAINERS_CHECKS_DISABLE=true ./gradlew integrationTest
  dependencies:
    - test
  artifacts:
    paths:
      - build

jacocoTestReport:
  stage: coverage
  tags:
    - exec-docker
  script:
    - du -h build
    - ls -al && ./gradlew jacocoTestReport
    # Print test coverage to console (for coverage badge)
    - cat build/reports/jacoco/test/html/index.html | grep -o 'Total[^%]*%' | sed 's/<.*>/ /; s/Total/Jacoco Coverage Total:/'
  coverage: '/Jacoco Coverage Total: ([0-9]{1,3})%/'
  dependencies:
    - integration-test
  artifacts:
    when: always
    reports:
      junit: build/test-results/**/TEST-*.xml
    paths:
      - build/reports/jacoco/test/jacocoTestReport.xml

coverage:
  stage: visualize
  tags:
    - exec-docker
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.7
  script:
    # convert report from jacoco to cobertura
    - 'python /opt/cover2cover.py build/reports/jacoco/test/jacocoTestReport.xml src/main/java > build/cobertura.xml'
    # read the <source></source> tag and prepend the path to every filename attribute
    - 'python /opt/source2filename.py build/cobertura.xml'
  needs: ["jacocoTestReport"]
  dependencies:
    - jacocoTestReport
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: build/cobertura.xml

push-dockerhub-native:
  image: ghcr.io/graalvm/graalvm-ce:java11-21.3.0
  stage: deploy
  only:
    - schedules
  before_script:
    - gu install native-image
  tags:
    - exec-docker
  script: 
    - ./gradlew clean assemble -Dquarkus.package.type=native -Dquarkus.container-image.build=true -Dquarkus.container-image.push=true -Dquarkus.container-image.name=user-service-native -Dquarkus.container-image.additional-tags=$CI_COMMIT_SHORT_SHA -Dquarkus.native.additional-build-args="--initialize-at-run-time=org.apache.kafka.common.security.authenticator.SaslClientAuthenticator\\,org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin\\,org.apache.commons.lang3.RandomStringUtils" -Dquarkus.container-image.username=$EXPLORVIZ_DOCKERHUB_USERNAME -Dquarkus.container-image.password=$EXPLORVIZ_DOCKERHUB_PASSWORD

push-dockerhub:
  stage: deploy
  only:
    - master
  except:
    - schedules
  tags:
    - exec-docker
  script: 
    - ./gradlew clean assemble -Dquarkus.container-image.build=true -Dquarkus.container-image.push=true -Dquarkus.container-image.additional-tags=$CI_COMMIT_SHORT_SHA -Dquarkus.container-image.username=$EXPLORVIZ_DOCKERHUB_USERNAME -Dquarkus.container-image.password=$EXPLORVIZ_DOCKERHUB_PASSWORD

push-dockerhub-dev:
  stage: deploy
  only:
    - master
  tags:
    - exec-docker
  script:
    - QUARKUS_OIDC_ENABLED=false ./gradlew clean assemble -Dquarkus.container-image.build=true -Dquarkus.container-image.push=true -Dquarkus.container-image.tag=dev -Dquarkus.container-image.additional-tags=$CI_COMMIT_SHORT_SHA-dev -Dquarkus.container-image.username=$EXPLORVIZ_DOCKERHUB_USERNAME -Dquarkus.container-image.password=$EXPLORVIZ_DOCKERHUB_PASSWORD
    - sleep 5m
